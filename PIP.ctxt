#BlueJ class context
comment0.target=PIP
comment0.text=\r\n\ \ \ \ \ \ \ An\ actor\ object\ that\ captures\ the\ current\ visual\ state\ of\ a\ world\ object.\ \ A\ world\ object\ is\ passed\ to\ this\ object\ in\ the\ constructor\ call.\r\n\ <br\ />\r\n\ <br\ />That\ world\ (usually\ not\ the\ world\ that\ this\ actor\ is\ placed\ into)\ can\ be\ controlled\ through\ the\ methods\ of\ this\ class.\ \ \r\n\ <l>\r\n\ \ \ \ \ \ <li>For\ 'Run'\ and\ 'Pause',\ use\ the\ 'run'\ and\ 'pause'\ methods\ (or\ the\ 'setActiveState'\ method)\ on\ the\ PIP\ object.</li>\r\n\ \ \ \ \ \ <li>For\ 'Step',\ use\ the\ 'step'\ method\ on\ the\ PIP\ object.</li>\r\n\ </l>\r\n\ \r\n\ <h3>NOTE\:\ DO\ NOT\ MODIFY\ THIS\ CLASS</h3>\r\n\ \r\n\ \ \ \ \ \ \ AUTHOR\:\ danpost\r\n\ <br\ />DATE\:\ May\ 22,\ 2013\r\n
comment1.params=minorWorld\ classes
comment1.target=PIP(greenfoot.World,\ java.lang.Class[])
comment1.text=\r\n\ \ \ \ \ \ \ creates\ the\ picture-in-picture\ object\r\n\r\n\ @param\ minorWorld\ the\ world\ object\ to\ portray\r\n\ @param\ classes\ the\ paint\ order\ of\ the\ world\ to\ portray\r\n
comment10.params=
comment10.target=void\ step()
comment10.text=\r\n\ \ \ \ \ \ \ executes\ one\ cycle\ of\ the\ displayed\ world\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ \ \ \ \ \ \ controls\ the\ running\ state\ of\ the\ displayed\ world\r\n
comment3.params=
comment3.target=void\ updateImage()
comment3.text=\r\n\ \ \ \ \ \ \ updates\ the\ picture\ of\ the\ given\ world\ within\ the\ image\ of\ this\ PIP\ object\r\n
comment4.params=actor
comment4.target=greenfoot.GreenfootImage\ getActorImage(greenfoot.Actor)
comment4.text=\r\n\ \ \ \ \ \ \ returns\ the\ image\ of\ an\ actor\ within\ the\ displayed\ world\r\n\r\n\ @param\ actor\ the\ actor\ whose\ image\ is\ to\ be\ placed\ within\ the\ displayed\ world\r\n\ @return\ a\ GreenfootImage\ object\ showing\ the\ current\ visual\ state\ of\ an\ actor\r\n
comment5.params=actor
comment5.target=boolean\ isPaintOrderActor(greenfoot.Actor)
comment5.text=\r\n\ \ \ \ \ \ \ determines\ whether\ an\ actor\ is\ an\ instance\ of\ a\ class\ contained\ in\ the\ paint\ order\ of\ the\ displayed\ world\r\n\r\n\ @param\ actor\ an\ actor\ from\ within\ the\ world\ that\ is\ displayed\r\n\ @return\ the\ state\ of\ the\ class\ of\ a\ given\ actor\ being\ contained\ within\ the\ paint\ order\ array\r\n
comment6.params=newActiveState
comment6.target=void\ setActiveState(boolean)
comment6.text=\r\n\ \ \ \ \ \ \ sets\ the\ active\ state\ of\ this\ PIP\ object;\ use\ this\ as\ an\ alternative\ to\ using\ the\ 'run'\ and\ 'pause'\ methods\r\n\r\n\ @param\ newActiveState\ the\ active\ state\ to\ set\ this\ PIP\ object\ to\r\n
comment7.params=
comment7.target=boolean\ getActiveState()
comment7.text=\r\n\ \ \ \ \ \ \ gets\ the\ current\ active\ state\ of\ this\ PIP\ object\r\n\r\n\ @return\ the\ current\ active\ state\ of\ this\ PIP\ object\r\n
comment8.params=
comment8.target=void\ run()
comment8.text=\r\n\ \ \ \ \ \ \ activates\ this\ PIP\ object,\ setting\ the\ displayed\ world\ into\ a\ running\ state\r\n
comment9.params=
comment9.target=void\ pause()
comment9.text=\r\n\ \ \ \ \ \ \ pauses\ this\ PIP\ object,\ setting\ the\ displayed\ world\ into\ a\ stopped\ state\r\n
numComments=11
